# Generated by Django 4.2.2 on 2023-06-28 10:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BokInflation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.DateTimeField(blank=True, null=True)),
                ('소비자물가', models.FloatField(blank=True, null=True)),
                ('농축수산물', models.FloatField(blank=True, null=True)),
                ('공업제품', models.FloatField(blank=True, null=True)),
                ('집세', models.FloatField(blank=True, null=True)),
                ('공공서비스', models.FloatField(blank=True, null=True)),
                ('개인서비스', models.FloatField(blank=True, null=True)),
                ('근원물가', models.FloatField(blank=True, null=True)),
                ('생활물가', models.FloatField(blank=True, null=True)),
                ('생산자물가', models.FloatField(blank=True, null=True)),
                ('농림수산품', models.FloatField(blank=True, null=True)),
                ('공산품', models.FloatField(blank=True, null=True)),
                ('전력가스및수도', models.FloatField(blank=True, null=True)),
                ('서비스', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bok_inflation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('회사명', models.TextField(blank=True, null=True)),
                ('symbol', models.TextField(blank=True, db_column='Symbol', null=True)),
                ('업종', models.TextField(blank=True, null=True)),
                ('주요제품', models.TextField(blank=True, null=True)),
                ('상장일', models.TextField(blank=True, null=True)),
                ('결산월', models.TextField(blank=True, null=True)),
                ('대표자명', models.TextField(blank=True, null=True)),
                ('홈페이지', models.TextField(blank=True, null=True)),
                ('지역', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'company_base',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_column='Date')),
                ('표준코드', models.TextField(blank=True, null=True)),
                ('symbol', models.TextField(blank=True, db_column='Symbol', null=True)),
                ('한글종목명', models.TextField(blank=True, null=True)),
                ('한글종목약명', models.TextField(blank=True, null=True)),
                ('영문종목명', models.TextField(blank=True, null=True)),
                ('상장일', models.TextField(blank=True, null=True)),
                ('시장구분', models.TextField(blank=True, null=True)),
                ('증권구분', models.TextField(blank=True, null=True)),
                ('소속부', models.TextField(blank=True, null=True)),
                ('주식종류', models.TextField(blank=True, null=True)),
                ('액면가', models.TextField(blank=True, null=True)),
                ('상장주식수', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'company_stock',
                'db_table_comment': '20230614: stock_base -> company_stock 변경\r\n202305    : 현재: 한국 주식 종목의 주식 기본 정보',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyUs',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('symbol', models.CharField(blank=True, db_column='Symbol', max_length=10, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('sector', models.CharField(blank=True, db_column='Sector', max_length=200, null=True)),
                ('industry', models.TextField(blank=True, db_column='Industry', null=True)),
                ('market', models.CharField(blank=True, db_column='Market', max_length=20, null=True)),
            ],
            options={
                'db_table': 'company_us',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corpinfo_fetch', models.DateField(blank=True, null=True)),
                ('krxohlc_fetch', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DbUpdates',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=45)),
                ('current_update', models.DateTimeField(db_comment='테이블에 업데이트한 최종일')),
                ('last_update', models.DateTimeField(blank=True, null=True)),
                ('memo', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'db_updates',
                'db_table_comment': 'finance_db 에 업데이트한 이력',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EnergyPrices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, db_column='Date', null=True)),
                ('brent', models.FloatField(blank=True, db_column='Brent', null=True)),
                ('wti', models.FloatField(blank=True, db_column='WTI', null=True)),
                ('gas', models.FloatField(blank=True, db_column='GAS', null=True)),
            ],
            options={
                'db_table': 'energy_prices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EtfDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('종목', models.TextField(blank=True, null=True)),
                ('종목명', models.TextField(blank=True, null=True)),
                ('영문명', models.TextField(blank=True, null=True)),
                ('표준코드', models.TextField(blank=True, null=True)),
                ('종목코드', models.TextField(blank=True, null=True)),
                ('상장일', models.TextField(blank=True, null=True)),
                ('펀드형태', models.TextField(blank=True, null=True)),
                ('기초지수명', models.TextField(blank=True, null=True)),
                ('추적배수', models.TextField(blank=True, null=True)),
                ('자산운용사', models.TextField(blank=True, null=True)),
                ('ap', models.TextField(blank=True, db_column='AP', null=True)),
                ('총보수', models.TextField(blank=True, null=True)),
                ('회계기간', models.TextField(blank=True, null=True)),
                ('과세유형', models.TextField(blank=True, null=True)),
                ('분배금지급', models.TextField(blank=True, null=True)),
                ('홈페이지', models.TextField(blank=True, null=True)),
                ('기본정보', models.TextField(blank=True, null=True)),
                ('투자유의사항', models.TextField(blank=True, null=True)),
                ('pay_class', models.TextField(blank=True, db_column='PAY_CLASS', null=True)),
            ],
            options={
                'db_table': 'etf_details',
                'db_table_comment': 'kind.krx.co.kr / 상장종목현황 상세정보 파일. 2023/05/10 초기화',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EtfProfitPayout',
            fields=[
                ('month', models.TextField(db_column='MONTH', primary_key=True, serialize=False)),
                ('종목코드', models.CharField(max_length=8)),
                ('yf코드', models.CharField(blank=True, max_length=10, null=True)),
                ('종목이름', models.TextField(blank=True, null=True)),
                ('지급기준일', models.TextField(blank=True, null=True)),
                ('지급예정일', models.TextField(blank=True, null=True)),
                ('분배금_원_field', models.SmallIntegerField(blank=True, db_column='분배금(원)', null=True)),
                ('close', models.IntegerField(blank=True, db_column='Close', null=True)),
                ('mode', models.CharField(blank=True, db_column='MODE', max_length=40, null=True)),
                ('dc_r', models.FloatField(blank=True, db_column='DC_R', null=True)),
            ],
            options={
                'db_table': 'etf_profit_payout',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.TextField(blank=True, db_column='Date', null=True)),
                ('종목코드', models.TextField(blank=True, null=True)),
                ('매출액', models.TextField(blank=True, null=True)),
                ('영업이익', models.TextField(blank=True, null=True)),
                ('영업이익_발표기준_field', models.TextField(blank=True, db_column='영업이익(발표기준)', null=True)),
                ('세전계속사업이익', models.TextField(blank=True, null=True)),
                ('당기순이익', models.TextField(blank=True, null=True)),
                ('당기순이익_지배_field', models.TextField(blank=True, db_column='당기순이익(지배)', null=True)),
                ('당기순이익_비지배_field', models.TextField(blank=True, db_column='당기순이익(비지배)', null=True)),
                ('자산총계', models.TextField(blank=True, null=True)),
                ('부채총계', models.TextField(blank=True, null=True)),
                ('자본총계', models.TextField(blank=True, null=True)),
                ('자본총계_지배_field', models.TextField(blank=True, db_column='자본총계(지배)', null=True)),
                ('자본총계_비지배_field', models.TextField(blank=True, db_column='자본총계(비지배)', null=True)),
                ('자본금', models.TextField(blank=True, null=True)),
                ('영업활동현금흐름', models.TextField(blank=True, null=True)),
                ('투자활동현금흐름', models.TextField(blank=True, null=True)),
                ('재무활동현금흐름', models.TextField(blank=True, null=True)),
                ('capex', models.TextField(blank=True, db_column='CAPEX', null=True)),
                ('fcf', models.TextField(blank=True, db_column='FCF', null=True)),
                ('이자발생부채', models.TextField(blank=True, null=True)),
                ('영업이익률', models.TextField(blank=True, null=True)),
                ('순이익률', models.TextField(blank=True, null=True)),
                ('roe_field', models.TextField(blank=True, db_column='ROE(%)', null=True)),
                ('roa_field', models.TextField(blank=True, db_column='ROA(%)', null=True)),
                ('부채비율', models.TextField(blank=True, null=True)),
                ('자본유보율', models.TextField(blank=True, null=True)),
                ('eps_원_field', models.TextField(blank=True, db_column='EPS(원)', null=True)),
                ('per_배_field', models.TextField(blank=True, db_column='PER(배)', null=True)),
                ('bps_원_field', models.TextField(blank=True, db_column='BPS(원)', null=True)),
                ('pbr_배_field', models.TextField(blank=True, db_column='PBR(배)', null=True)),
                ('현금dps_원_field', models.TextField(blank=True, db_column='현금DPS(원)', null=True)),
                ('현금배당수익률', models.TextField(blank=True, null=True)),
                ('현금배당성향_field', models.TextField(blank=True, db_column='현금배당성향(%)', null=True)),
                ('발행주식수_보통주_field', models.TextField(blank=True, db_column='발행주식수(보통주)', null=True)),
                ('기준일', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fin_statement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForeignKrw',
            fields=[
                ('date', models.DateTimeField(db_column='Date', primary_key=True, serialize=False)),
                ('jpykrw_x', models.FloatField(blank=True, db_column='JPYKRW=X', null=True)),
                ('usdkrw_x', models.FloatField(blank=True, db_column='USDKRW=X', null=True)),
            ],
            options={
                'db_table': 'foreign_krw',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kospi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, db_column='Date', null=True)),
                ('open', models.FloatField(blank=True, db_column='Open', null=True)),
                ('high', models.FloatField(blank=True, db_column='High', null=True)),
                ('low', models.FloatField(blank=True, db_column='Low', null=True)),
                ('close', models.FloatField(blank=True, db_column='Close', null=True)),
                ('adj_close', models.FloatField(blank=True, db_column='Adj Close', null=True)),
                ('volume', models.FloatField(blank=True, db_column='Volume', null=True)),
            ],
            options={
                'db_table': 'kospi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KrWords',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('kind', models.CharField(db_comment='단어의 종류', max_length=25)),
                ('words', models.TextField(db_comment='단어의 종류')),
                ('current_update', models.DateTimeField(db_comment='테이블에 업데이트한 최종일')),
            ],
            options={
                'db_table': 'kr_words',
                'db_table_comment': '한글 단어 관련 데이터를 수집',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KrxIndexStocks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('지수', models.TextField(blank=True, null=True)),
                ('기준일', models.TextField(blank=True, null=True)),
                ('종목코드', models.TextField(blank=True, null=True)),
                ('종목명', models.TextField(blank=True, null=True)),
                ('종가', models.TextField(blank=True, null=True)),
                ('대비', models.TextField(blank=True, null=True)),
                ('등락률', models.TextField(blank=True, null=True)),
                ('시가총액', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'krx_index_stocks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PricesEtfKr',
            fields=[
                ('date', models.DateTimeField(db_column='Date', primary_key=True, serialize=False)),
                ('symbol', models.TextField(db_column='Symbol')),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
                ('close', models.BigIntegerField(blank=True, db_column='Close', null=True)),
                ('changes', models.BigIntegerField(blank=True, db_column='Changes', null=True)),
                ('changeratio', models.FloatField(blank=True, db_column='ChangeRatio', null=True)),
                ('nav', models.FloatField(blank=True, db_column='Nav', null=True)),
                ('open', models.BigIntegerField(blank=True, db_column='Open', null=True)),
                ('high', models.BigIntegerField(blank=True, db_column='High', null=True)),
                ('low', models.BigIntegerField(blank=True, db_column='Low', null=True)),
                ('volume', models.BigIntegerField(blank=True, db_column='Volume', null=True)),
                ('amount', models.BigIntegerField(blank=True, db_column='Amount', null=True)),
                ('marcap', models.BigIntegerField(blank=True, db_column='Marcap', null=True)),
                ('navcap', models.BigIntegerField(blank=True, db_column='NavCap', null=True)),
                ('stocks', models.BigIntegerField(blank=True, db_column='Stocks', null=True)),
                ('indexname', models.TextField(blank=True, db_column='IndexName', null=True)),
                ('indexclose', models.TextField(blank=True, db_column='IndexClose', null=True)),
                ('indexchange', models.TextField(blank=True, db_column='IndexChange', null=True)),
                ('indexchangeratio', models.TextField(blank=True, db_column='IndexChangeRatio', null=True)),
            ],
            options={
                'db_table': 'prices_etf_kr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PricesKr',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('symbol', models.CharField(blank=True, db_column='Symbol', max_length=50, null=True)),
                ('date', models.DateTimeField(blank=True, db_column='Date', null=True)),
                ('open', models.IntegerField(blank=True, db_column='Open', null=True)),
                ('high', models.IntegerField(blank=True, db_column='High', null=True)),
                ('low', models.IntegerField(blank=True, db_column='Low', null=True)),
                ('close', models.IntegerField(blank=True, db_column='Close', null=True)),
                ('adj_close', models.IntegerField(blank=True, db_column='Adj Close', null=True)),
                ('volume', models.BigIntegerField(blank=True, db_column='Volume', null=True)),
            ],
            options={
                'db_table': 'prices_kr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PricesUs',
            fields=[
                ('idx', models.AutoField(primary_key=True, serialize=False)),
                ('symbol', models.CharField(blank=True, db_column='Symbol', max_length=50, null=True)),
                ('date', models.DateTimeField(blank=True, db_column='Date', null=True)),
                ('open', models.FloatField(blank=True, db_column='Open', null=True)),
                ('high', models.FloatField(blank=True, db_column='High', null=True)),
                ('low', models.FloatField(blank=True, db_column='Low', null=True)),
                ('close', models.FloatField(blank=True, db_column='Close', null=True)),
                ('adj_close', models.FloatField(blank=True, db_column='Adj Close', null=True)),
                ('volume', models.BigIntegerField(blank=True, db_column='Volume', null=True)),
            ],
            options={
                'db_table': 'prices_us',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TickersKr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('기준일', models.DateTimeField(blank=True, null=True)),
                ('종목코드', models.TextField(blank=True, null=True)),
                ('종목명', models.TextField(blank=True, null=True)),
                ('시장구분', models.TextField(blank=True, null=True)),
                ('종가', models.BigIntegerField(blank=True, null=True)),
                ('시가총액', models.BigIntegerField(blank=True, null=True)),
                ('eps', models.TextField(blank=True, db_column='EPS', null=True)),
                ('선행eps', models.TextField(blank=True, db_column='선행EPS', null=True)),
                ('bps', models.TextField(blank=True, db_column='BPS', null=True)),
                ('주당배당금', models.TextField(blank=True, null=True)),
                ('종목구분', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tickers_kr',
                'managed': False,
            },
        ),
    ]
